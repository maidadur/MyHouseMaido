// <auto-generated />
using System;
using Maid.Manga.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Maid.Manga.DB.Migrations
{
    [DbContext(typeof(MangaDbContext))]
    [Migration("20200625154717_Sources3")]
    partial class Sources3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Maid.Manga.DB.MangaChapterInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Date");

                    b.Property<string>("Href");

                    b.Property<Guid>("MangaId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("MangaId");

                    b.ToTable("MangaChapterInfo");
                });

            modelBuilder.Entity("Maid.Manga.DB.MangaInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Href");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.Property<Guid?>("SourceId");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("MangaInfo");
                });

            modelBuilder.Entity("Maid.Manga.DB.MangaSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChapterItemXpath");

                    b.Property<string>("Code");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DomainUrl");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("ImageXpath");

                    b.Property<string>("Name");

                    b.Property<string>("TitleXpath");

                    b.HasKey("Id");

                    b.ToTable("MangaSource");
                });

            modelBuilder.Entity("Maid.Manga.DB.MangaChapterInfo", b =>
                {
                    b.HasOne("Maid.Manga.DB.MangaInfo", "Manga")
                        .WithMany("Chapters")
                        .HasForeignKey("MangaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Maid.Manga.DB.MangaInfo", b =>
                {
                    b.HasOne("Maid.Manga.DB.MangaSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");
                });
#pragma warning restore 612, 618
        }
    }
}
